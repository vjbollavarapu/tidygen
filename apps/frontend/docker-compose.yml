version: '3.8'

services:
  # Frontend Service
  frontend:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=production
      - NEXT_PUBLIC_API_URL=http://backend:8000
      - NEXT_PUBLIC_WS_URL=ws://backend:8000
    depends_on:
      - backend
    networks:
      - tidygen-network
    restart: unless-stopped

  # Backend Service
  backend:
    build:
      context: ../backend
      dockerfile: Dockerfile
    ports:
      - "8000:8000"
    environment:
      - DEBUG=1
      - SECRET_KEY=your-secret-key-here
      - DATABASE_URL=postgresql://postgres:password@db:5432/tidygen_erp
      - REDIS_URL=redis://redis:6379/0
      - CORS_ALLOWED_ORIGINS=http://localhost:3000,http://frontend:3000
    depends_on:
      - db
      - redis
    volumes:
      - ./media:/app/media
      - ./static:/app/static
    networks:
      - tidygen-network
    restart: unless-stopped

  # Database Service
  db:
    image: postgres:15-alpine
    environment:
      - POSTGRES_DB=tidygen_erp
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=password
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - "5432:5432"
    networks:
      - tidygen-network
    restart: unless-stopped

  # Redis Service
  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - tidygen-network
    restart: unless-stopped

  # Nginx Reverse Proxy
  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
      - ./ssl:/etc/nginx/ssl
    depends_on:
      - frontend
      - backend
    networks:
      - tidygen-network
    restart: unless-stopped

  # Celery Worker
  celery:
    build:
      context: ../backend
      dockerfile: Dockerfile
    command: celery -A tidygen_erp worker -l info
    environment:
      - DEBUG=1
      - SECRET_KEY=your-secret-key-here
      - DATABASE_URL=postgresql://postgres:password@db:5432/tidygen_erp
      - REDIS_URL=redis://redis:6379/0
    depends_on:
      - db
      - redis
    volumes:
      - ./media:/app/media
    networks:
      - tidygen-network
    restart: unless-stopped

  # Celery Beat (Scheduler)
  celery-beat:
    build:
      context: ../backend
      dockerfile: Dockerfile
    command: celery -A tidygen_erp beat -l info
    environment:
      - DEBUG=1
      - SECRET_KEY=your-secret-key-here
      - DATABASE_URL=postgresql://postgres:password@db:5432/tidygen_erp
      - REDIS_URL=redis://redis:6379/0
    depends_on:
      - db
      - redis
    volumes:
      - ./media:/app/media
    networks:
      - tidygen-network
    restart: unless-stopped

  # IPFS Node (for Web3 features)
  ipfs:
    image: ipfs/go-ipfs:latest
    ports:
      - "4001:4001"
      - "5001:5001"
      - "8080:8080"
    volumes:
      - ipfs_data:/data/ipfs
    environment:
      - IPFS_PROFILE=server
    networks:
      - tidygen-network
    restart: unless-stopped

  # Substrate Node (for blockchain features)
  substrate:
    image: parity/polkadot:latest
    ports:
      - "9944:9944"
    volumes:
      - substrate_data:/data
    command: --dev --ws-external --rpc-external --rpc-cors all
    networks:
      - tidygen-network
    restart: unless-stopped

volumes:
  postgres_data:
  redis_data:
  ipfs_data:
  substrate_data:

networks:
  tidygen-network:
    driver: bridge
