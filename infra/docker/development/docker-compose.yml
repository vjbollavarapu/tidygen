version: '3.8'

services:
  # PostgreSQL Database
  db:
    image: postgres:15-alpine
    container_name: tidygen_db_dev
    environment:
      POSTGRES_DB: tidygen_erp
      POSTGRES_USER: tidygen_user
      POSTGRES_PASSWORD: tidygen_password
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U tidygen_user -d tidygen_erp"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Redis Cache
  redis:
    image: redis:7-alpine
    container_name: tidygen_redis_dev
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Django Backend
  backend:
    build:
      context: ../../../
      dockerfile: apps/backend/Dockerfile
      target: development
    container_name: tidygen_backend_dev
    environment:
      - DJANGO_ENV=development
      - DEBUG=True
      - SECRET_KEY=dev-secret-key-change-in-production
      - DATABASE_URL=postgresql://tidygen_user:tidygen_password@db:5432/tidygen_erp
      - REDIS_URL=redis://redis:6379/1
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/0
      - WEB3_PROVIDER_URL=http://ganache:8545
      - WEB3_NETWORK_ID=1337
    volumes:
      - ../../../apps/backend:/app
      - backend_media:/app/media
      - backend_static:/app/staticfiles
      - backend_logs:/app/logs
    ports:
      - "8000:8000"
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    command: >
      sh -c "python manage.py migrate &&
             python manage.py collectstatic --noinput &&
             python manage.py runserver 0.0.0.0:8000"

  # Celery Worker
  celery:
    build:
      context: ../../../
      dockerfile: apps/backend/Dockerfile
      target: development
    container_name: tidygen_celery_dev
    environment:
      - DJANGO_ENV=development
      - DEBUG=True
      - SECRET_KEY=dev-secret-key-change-in-production
      - DATABASE_URL=postgresql://tidygen_user:tidygen_password@db:5432/tidygen_erp
      - REDIS_URL=redis://redis:6379/1
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/0
    volumes:
      - ../../../apps/backend:/app
      - backend_media:/app/media
      - backend_logs:/app/logs
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    command: celery -A backend worker --loglevel=info

  # Celery Beat Scheduler
  celery-beat:
    build:
      context: ../../../
      dockerfile: apps/backend/Dockerfile
      target: development
    container_name: tidygen_celery_beat_dev
    environment:
      - DJANGO_ENV=development
      - DEBUG=True
      - SECRET_KEY=dev-secret-key-change-in-production
      - DATABASE_URL=postgresql://tidygen_user:tidygen_password@db:5432/tidygen_erp
      - REDIS_URL=redis://redis:6379/1
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/0
    volumes:
      - ../../../apps/backend:/app
      - backend_logs:/app/logs
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    command: celery -A backend beat --loglevel=info

  # Ganache (Ethereum testnet)
  ganache:
    image: trufflesuite/ganache-cli:latest
    container_name: tidygen_ganache_dev
    command: ganache-cli --host 0.0.0.0 --port 8545 --networkId 1337 --gasLimit 10000000 --gasPrice 20000000000 --accounts 10 --defaultBalanceEther 1000 --deterministic
    ports:
      - "8545:8545"

  # Nginx (Optional for development)
  nginx:
    image: nginx:alpine
    container_name: tidygen_nginx_dev
    ports:
      - "80:80"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
      - backend_static:/var/www/static
      - backend_media:/var/www/media
    depends_on:
      - backend

volumes:
  postgres_data:
  redis_data:
  backend_media:
  backend_static:
  backend_logs: